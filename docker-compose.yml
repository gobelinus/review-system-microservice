services:
  # PostgreSQL Database
  postgres:
    build:
      context: .
      dockerfile: ./docker/postgres/Dockerfile
    container_name: review-system-postgres
    environment:
      POSTGRES_DB: reviewsystem
      POSTGRES_USER: reviewuser
      POSTGRES_PASSWORD: reviewpass
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      # This volume is for persistent PostgreSQL data
      - postgres_data:/var/lib/postgresql/data
      # We no longer need to mount the init directory here
      # - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - review-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U reviewuser -d reviewsystem" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # LocalStack for AWS S3 simulation
  localstack:
    build:
      context: . # Build context is the project root (where docker-compose.yml is)
      dockerfile: ./docker/localstack/Dockerfile
    container_name: review-system-localstack
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - PERSISTENCE=1
    ports:
      - "4566:4566"  # LocalStack Gateway
      - "4510-4559:4510-4559"  # External services port range
    volumes:
      - "${TMPDIR:-/tmp}/localstack_data:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - review-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4566/health" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Review System Application
  review-system-app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: review-system-app
    environment:
      # Database Configuration
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/reviewsystem
      - SPRING_DATASOURCE_USERNAME=reviewuser
      - SPRING_DATASOURCE_PASSWORD=reviewpass
      - SPRING_JPA_HIBERNATE_DDL_AUTO=validate
      - SPRING_JPA_SHOW_SQL=true
      
      # AWS Configuration (LocalStack)
      - AWS_REGION=us-east-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_S3_BUCKET_NAME=review-files
      
      # Application Configuration
      - SPRING_PROFILES_ACTIVE=local
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_COM_REVIEWSYSTEM=DEBUG
      
      # Scheduling Configuration
      - REVIEW_PROCESSOR_ENABLED=true
      - REVIEW_PROCESSOR_CRON=0 */5 * * * *
      
      # Server Configuration
      - SERVER_PORT=8080
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE=health,info,metrics,prometheus
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - review-network
    depends_on:
      postgres:
        condition: service_healthy
      localstack:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

networks:
  review-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
