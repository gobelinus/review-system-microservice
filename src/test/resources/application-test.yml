# Test configuration for PostgreSQL database using Testcontainers
spring:
  config:
    activate:
      on-profile: test-postgres
  datasource:
    # Use the Testcontainers JDBC URL scheme
    url: jdbc:tc:postgresql:16-alpine:///reviewsystem_test # Use a specific version, e.g., 16-alpine
    username: test_user # These can often be omitted, Testcontainers provides defaults
    password: test_password # but it's good to match what you might define in your container
    driver-class-name: org.testcontainers.jdbc.ContainerDatabaseDriver # CRUCIAL: This activates Testcontainers JDBC

  task:
    scheduling:
      pool:
        size: 5
      thread-name-prefix: review-scheduler-

  jpa:
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect # Corrected: platform not provider
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        jdbc:
          time_zone: UTC
    defer-datasource-initialization: false

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    clean-disabled: false # Be careful with clean-disabled=false in tests if you want a fresh DB each time

  test:
    database:
      replace: none # Important: Keep this to prevent in-memory DB from replacing Testcontainers

# Application specific test configuration
app:
  file-tracking:
    cleanup-days: 7
    stuck-processing-hours: 1

# Logging configuration for tests
logging:
  level:
    com.reviewsystem: DEBUG
    org.springframework.orm.jpa: DEBUG
    org.springframework.transaction: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"